0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'update', '-g', 'bower' ]
2 info using npm@1.3.10
3 info using node@v0.10.25
4 verbose cache add [ 'bower', '*' ]
5 verbose cache add name="bower" spec="*" args=["bower","*"]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: '*',
6 verbose parsed url   path: '*',
6 verbose parsed url   href: '*' }
7 verbose addNamed [ 'bower', '*' ]
8 verbose addNamed [ null, '*' ]
9 silly lockFile b788227f-bower bower@*
10 verbose lock bower@* /home/jupazave/.npm/b788227f-bower.lock
11 silly addNameRange { name: 'bower', range: '*', hasData: false }
12 verbose url raw bower
13 verbose url resolving [ 'https://registry.npmjs.org/', './bower' ]
14 verbose url resolved https://registry.npmjs.org/bower
15 info trying registry request attempt 1 at 19:42:00
16 verbose etag "DP3LZ84X7XJXE35FCC8I23EXL"
17 http GET https://registry.npmjs.org/bower
18 http 304 https://registry.npmjs.org/bower
19 silly registry.get cb [ 304,
19 silly registry.get   { date: 'Sat, 14 Jun 2014 00:42:00 GMT',
19 silly registry.get     server: 'Apache',
19 silly registry.get     via: '1.1 varnish',
19 silly registry.get     'last-modified': 'Sat, 14 Jun 2014 00:42:00 GMT',
19 silly registry.get     'cache-control': 'max-age=30',
19 silly registry.get     etag: '"DP3LZ84X7XJXE35FCC8I23EXL"',
19 silly registry.get     'x-served-by': 'cache-lax1426-LAX',
19 silly registry.get     'x-cache': 'HIT',
19 silly registry.get     'x-cache-hits': '1',
19 silly registry.get     'x-timer': 'S1402706520.958798,VS0,VE0',
19 silly registry.get     vary: 'Accept',
19 silly registry.get     'content-length': '0',
19 silly registry.get     'keep-alive': 'timeout=10, max=50',
19 silly registry.get     connection: 'Keep-Alive' } ]
20 verbose etag bower from cache
21 silly addNameRange number 2 { name: 'bower', range: '*', hasData: true }
22 silly addNameRange versions [ 'bower',
22 silly addNameRange   [ '0.1.0',
22 silly addNameRange     '0.1.2',
22 silly addNameRange     '0.1.3',
22 silly addNameRange     '0.2.0',
22 silly addNameRange     '0.3.0',
22 silly addNameRange     '0.3.1',
22 silly addNameRange     '0.3.2',
22 silly addNameRange     '0.4.0',
22 silly addNameRange     '0.5.0',
22 silly addNameRange     '0.5.1',
22 silly addNameRange     '0.6.0',
22 silly addNameRange     '0.6.1',
22 silly addNameRange     '0.6.2',
22 silly addNameRange     '0.6.3',
22 silly addNameRange     '0.6.4',
22 silly addNameRange     '0.6.5',
22 silly addNameRange     '0.6.6',
22 silly addNameRange     '0.6.7',
22 silly addNameRange     '0.6.8',
22 silly addNameRange     '0.7.0',
22 silly addNameRange     '0.7.1',
22 silly addNameRange     '0.8.0',
22 silly addNameRange     '0.8.1',
22 silly addNameRange     '0.8.2',
22 silly addNameRange     '0.8.3',
22 silly addNameRange     '0.8.4',
22 silly addNameRange     '0.8.5',
22 silly addNameRange     '0.8.6',
22 silly addNameRange     '0.9.0',
22 silly addNameRange     '0.9.1',
22 silly addNameRange     '0.9.2',
22 silly addNameRange     '0.10.0',
22 silly addNameRange     '1.0.0',
22 silly addNameRange     '1.0.1',
22 silly addNameRange     '1.0.2',
22 silly addNameRange     '1.0.3',
22 silly addNameRange     '1.1.0',
22 silly addNameRange     '1.1.1',
22 silly addNameRange     '1.1.2',
22 silly addNameRange     '1.2.0',
22 silly addNameRange     '1.2.1',
22 silly addNameRange     '1.2.2',
22 silly addNameRange     '1.2.3',
22 silly addNameRange     '1.2.4',
22 silly addNameRange     '1.2.5',
22 silly addNameRange     '1.2.6',
22 silly addNameRange     '1.2.7',
22 silly addNameRange     '1.2.8',
22 silly addNameRange     '1.3.0',
22 silly addNameRange     '1.3.1',
22 silly addNameRange     '1.3.2',
22 silly addNameRange     '1.3.3',
22 silly addNameRange     '1.3.4',
22 silly addNameRange     '1.3.5' ] ]
23 verbose addNamed [ 'bower', '1.3.5' ]
24 verbose addNamed [ '1.3.5', '1.3.5' ]
25 silly lockFile ba50d98b-bower-1-3-5 bower@1.3.5
26 verbose lock bower@1.3.5 /home/jupazave/.npm/ba50d98b-bower-1-3-5.lock
27 silly lockFile ba50d98b-bower-1-3-5 bower@1.3.5
28 silly lockFile ba50d98b-bower-1-3-5 bower@1.3.5
29 silly lockFile b788227f-bower bower@*
30 silly lockFile b788227f-bower bower@*
31 info outdated updating [ [ '/usr/local/lib', 'bower', '1.3.3', '1.3.5', '*' ] ]
32 verbose install where,what [ '/usr/local/lib', [ 'bower@1.3.5' ] ]
33 verbose cache add [ 'bower@1.3.5', null ]
34 verbose cache add name=undefined spec="bower@1.3.5" args=["bower@1.3.5",null]
35 verbose parsed url { protocol: null,
35 verbose parsed url   slashes: null,
35 verbose parsed url   auth: null,
35 verbose parsed url   host: null,
35 verbose parsed url   port: null,
35 verbose parsed url   hostname: null,
35 verbose parsed url   hash: null,
35 verbose parsed url   search: null,
35 verbose parsed url   query: null,
35 verbose parsed url   pathname: 'bower@1.3.5',
35 verbose parsed url   path: 'bower@1.3.5',
35 verbose parsed url   href: 'bower@1.3.5' }
36 verbose cache add name="bower" spec="1.3.5" args=["bower","1.3.5"]
37 verbose parsed url { protocol: null,
37 verbose parsed url   slashes: null,
37 verbose parsed url   auth: null,
37 verbose parsed url   host: null,
37 verbose parsed url   port: null,
37 verbose parsed url   hostname: null,
37 verbose parsed url   hash: null,
37 verbose parsed url   search: null,
37 verbose parsed url   query: null,
37 verbose parsed url   pathname: '1.3.5',
37 verbose parsed url   path: '1.3.5',
37 verbose parsed url   href: '1.3.5' }
38 verbose addNamed [ 'bower', '1.3.5' ]
39 verbose addNamed [ '1.3.5', '1.3.5' ]
40 silly lockFile ba50d98b-bower-1-3-5 bower@1.3.5
41 verbose lock bower@1.3.5 /home/jupazave/.npm/ba50d98b-bower-1-3-5.lock
42 verbose url raw bower/1.3.5
43 verbose url resolving [ 'https://registry.npmjs.org/', './bower/1.3.5' ]
44 verbose url resolved https://registry.npmjs.org/bower/1.3.5
45 info trying registry request attempt 1 at 19:42:00
46 verbose etag "DP3LZ84X7XJXE35FCC8I23EXL"
47 http GET https://registry.npmjs.org/bower/1.3.5
48 http 304 https://registry.npmjs.org/bower/1.3.5
49 silly registry.get cb [ 304,
49 silly registry.get   { date: 'Sat, 14 Jun 2014 00:42:01 GMT',
49 silly registry.get     server: 'Apache',
49 silly registry.get     via: '1.1 varnish',
49 silly registry.get     'last-modified': 'Sat, 14 Jun 2014 00:42:01 GMT',
49 silly registry.get     'cache-control': 'max-age=30',
49 silly registry.get     etag: '"DP3LZ84X7XJXE35FCC8I23EXL"',
49 silly registry.get     'x-served-by': 'cache-lax1427-LAX',
49 silly registry.get     'x-cache': 'HIT',
49 silly registry.get     'x-cache-hits': '1',
49 silly registry.get     'x-timer': 'S1402706521.400606,VS0,VE48',
49 silly registry.get     vary: 'Accept',
49 silly registry.get     'content-length': '0',
49 silly registry.get     'keep-alive': 'timeout=10, max=50',
49 silly registry.get     connection: 'Keep-Alive' } ]
50 verbose etag bower/1.3.5 from cache
51 silly lockFile ba50d98b-bower-1-3-5 bower@1.3.5
52 silly lockFile ba50d98b-bower-1-3-5 bower@1.3.5
53 silly resolved [ { name: 'bower',
53 silly resolved     version: '1.3.5',
53 silly resolved     description: 'The browser package manager',
53 silly resolved     author: { name: 'Twitter' },
53 silly resolved     licenses: [ [Object] ],
53 silly resolved     repository: { type: 'git', url: 'git://github.com/bower/bower' },
53 silly resolved     main: 'lib',
53 silly resolved     homepage: 'http://bower.io',
53 silly resolved     engines: { node: '>=0.10.0' },
53 silly resolved     dependencies:
53 silly resolved      { abbrev: '~1.0.4',
53 silly resolved        archy: '~0.0.2',
53 silly resolved        'bower-config': '~0.5.0',
53 silly resolved        'bower-endpoint-parser': '~0.2.0',
53 silly resolved        'bower-json': '~0.4.0',
53 silly resolved        'bower-logger': '~0.2.2',
53 silly resolved        'bower-registry-client': '~0.2.0',
53 silly resolved        cardinal: '~0.4.0',
53 silly resolved        chalk: '~0.4.0',
53 silly resolved        chmodr: '~0.1.0',
53 silly resolved        'decompress-zip': '~0.0.6',
53 silly resolved        fstream: '~0.1.22',
53 silly resolved        'fstream-ignore': '~0.0.6',
53 silly resolved        glob: '~3.2.9',
53 silly resolved        'graceful-fs': '~2.0.0',
53 silly resolved        handlebars: '~1.3.0',
53 silly resolved        inquirer: '~0.4.0',
53 silly resolved        insight: '~0.3.0',
53 silly resolved        'is-root': '~0.1.0',
53 silly resolved        junk: '~0.3.0',
53 silly resolved        lockfile: '~0.4.2',
53 silly resolved        'lru-cache': '~2.5.0',
53 silly resolved        mkdirp: '~0.3.5',
53 silly resolved        mout: '~0.9.1',
53 silly resolved        nopt: '~2.2.0',
53 silly resolved        opn: '~0.1.1',
53 silly resolved        osenv: '~0.0.3',
53 silly resolved        'p-throttler': '~0.0.1',
53 silly resolved        promptly: '~0.2.0',
53 silly resolved        q: '~1.0.1',
53 silly resolved        request: '~2.34.0',
53 silly resolved        'request-progress': '~0.3.0',
53 silly resolved        retry: '~0.6.0',
53 silly resolved        rimraf: '~2.2.0',
53 silly resolved        semver: '~2.2.1',
53 silly resolved        'shell-quote': '~1.4.1',
53 silly resolved        'stringify-object': '~0.2.0',
53 silly resolved        tar: '~0.1.17',
53 silly resolved        tmp: '~0.0.20',
53 silly resolved        'update-notifier': '~0.1.8',
53 silly resolved        which: '~1.0.5' },
53 silly resolved     devDependencies:
53 silly resolved      { 'expect.js': '~0.3.1',
53 silly resolved        grunt: '~0.4.4',
53 silly resolved        'grunt-contrib-jshint': '~0.10.0',
53 silly resolved        'grunt-contrib-watch': '~0.6.1',
53 silly resolved        'grunt-exec': '~0.4.2',
53 silly resolved        'grunt-simple-mocha': '~0.4.0',
53 silly resolved        istanbul: '~0.2.4',
53 silly resolved        'load-grunt-tasks': '~0.4.0',
53 silly resolved        mocha: '~1.18',
53 silly resolved        nock: '~0.28.2',
53 silly resolved        proxyquire: '~0.6.0' },
53 silly resolved     scripts: { test: 'grunt test' },
53 silly resolved     bin: { bower: 'bin/bower' },
53 silly resolved     preferGlobal: true,
53 silly resolved     readme: '# Bower [![Build Status](https://travis-ci.org/bower/bower.svg?branch=master)](https://travis-ci.org/bower/bower)\n\n<img align="right" height="300" src="http://bower.io/img/bower-logo.png">\n\n> A package manager for the web\n\nIt offers a generic, unopinionated solution to the problem of **front-end package management**, while exposing the package dependency model via an API that can be consumed by a more opinionated build stack. There are no system wide dependencies, no dependencies are shared between different apps, and the dependency tree is flat.\n\nBower runs over Git, and is package-agnostic. A packaged component can be made up of any type of asset, and use any type of transport (e.g., AMD, CommonJS, etc.).\n\n[View all packages available through Bower\'s registry](http://bower.io/search/).\n\n\n## Install\n\n```sh\n$ npm install -g bower\n```\n\nBower depends on [Node.js](http://nodejs.org/) and [npm](http://npmjs.org/). Also make sure that [git](http://git-scm.com/) is installed as some bower\npackages require it to be fetched and installed.\n\n\n## Usage\n\nMuch more information is available via `bower help` once it\'s installed. This\nis just enough to get you started.\n\n### Installing packages and dependencies\n\nBower offers several ways to install packages:\n\n##### Using the dependencies listed in the current directory\'s bower.json\n\n```sh\n$ bower install\n```\n\n##### Using a local or remote package\n\n```sh\n$ bower install <package>\n```\n\n##### Using a specific version of a package\n\n```sh\n$ bower install <package>#<version>\n```\n\n##### Using a different name and a specific version of a package\n\n```sh\n$ bower install <name>=<package>#<version>\n```\n\nWhere `<package>` can be any one of the following:\n\n* A name that maps to a package registered with Bower, e.g, `jquery`. ‡\n* A public remote Git endpoint, e.g., `git://github.com/someone/some-package.git`. ‡\n* A private Git repository, e.g., `https://github.com/someone/some-package.git`. If the protocol is https, a prompt will ask for the credentials. ssh can also be used, e.g., `git@github.com:someone/some-package.git` and can authenticate with the user\'s ssh public/private keys. ‡\n* A local endpoint, i.e., a folder that\'s a Git repository. ‡\n* A public remote Subversion endpoint, e.g., `svn+http://package.googlecode.com/svn/`. ‡\n* A private Subversion repository, e.g., `svn+ssh://package.googlecode.com/svn/` or `svn+https://package.googlecode.com/svn/`. ‡\n* A local endpoint, i.e., a folder that\'s an Subversion repository, e.g., `svn+file:///path/to/svn/`. ‡\n* A shorthand endpoint, e.g., `someone/some-package` (defaults to GitHub). ‡\n* A URL to a file, including `zip` and `tar` files. Its contents will be\n  extracted.\n\n‡ These types of `<package>` might have versions available. You can specify a\n[semver](http://semver.org/) compatible version to fetch a specific release, and lock the\npackage to that version. You can also specify a [range](https://github.com/isaacs/node-semver#ranges) of versions.\n\nIf you are using a package that is a git endpoint, you may use any tag, commit SHA,\nor branch name as a version. For example: `<package>#<sha>`. Using branches is not\nrecommended because the HEAD does not reference a fixed commit SHA.\n\nIf you are using a package that is a subversion endpoint, you may use any tag, revision number,\nor branch name as a version. For example: `<package>#<revision>`.\n\nAll package contents are installed in the `bower_components` directory by default.\nYou should **never** directly modify the contents of this directory.\n\nUsing `bower list` will show all the packages that are installed locally.\n\n**N.B.** If you aren\'t authoring a package that is intended to be consumed by\nothers (e.g., you\'re building a web app), you should always [check installed\npackages into source control](http://addyosmani.com/blog/checking-in-front-end-dependencies/).\n\n\n### Custom install directory\n\nA custom install location can be set in a `.bowerrc` file using the `directory` property. The .bowerrc file should be a sibling of your project\'s bower.json.\n\n```json\n{\n  "directory": "app/components"\n}\n```\n\n\n### Finding packages\n\nTo search for packages registered with Bower:\n\n```sh\n$ bower search [<name>]\n```\n\nUsing just `bower search` will list all packages in the registry.\n\n### Using packages\n\nWe discourage using bower components statically for performance and security reasons (if component has an `upload.php` file that is not ignored, that can be easily exploited to do malicious stuff).\n\nThe best approach is to process components installed by bower with build tool (like [Grunt](http://gruntjs.com/) or [gulp](http://gulpjs.com/)), and serve them concatenated or using module loader (like [RequireJS](http://requirejs.org/)).\n\n### Uninstalling packages\n\nTo uninstall a locally installed package:\n\n```sh\n$ bower uninstall <package-name>\n```\n\n\n#### Warning\n\nOn `prezto` or `oh-my-zsh`, do not forget to `alias bower=\'noglob bower\'` or `bower install jquery\\#1.9.1`\n\n#### Running commands with sudo\n\nBower is a user command, there is no need to execute it with superuser permissions.\nHowever, if you still want to run commands with sudo, use `--allow-root` option.\n\n#### A note for Windows users\n\nTo use Bower on Windows, you must install\n[msysgit](http://msysgit.github.io/) correctly. Be sure to check the\noption shown below:\n\n![msysgit](http://f.cl.ly/items/2V2O3i1p3R2F1r2v0a12/mysgit.png)\n\nNote that if you use TortoiseGit and if Bower keeps asking for your SSH\npassword, you should add the following environment variable: `GIT_SSH -\nC:\\Program Files\\TortoiseGit\\bin\\TortoisePlink.exe`. Adjust the `TortoisePlink`\npath if needed.\n\n### Using bower\'s cache\n\nBower supports installing packages from its local cache (without internet connection), if the packages were installed before.\n\n```sh\n$ bower install <package-name> --offline\n```\n\nThe content of the cache can be listed with:\n\n```sh\n$ bower cache list\n```\n\nThe cache can be cleaned with:\n\n```sh\n$ bower cache clean\n```\n\n## Configuration\n\nBower can be configured using JSON in a `.bowerrc` file.\n\nThe current spec can be read\n[here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/edit#heading=h.4pzytc1f9j8k)\nin the `Configuration` section.\n\n## Running on a continuous integration server\n\nBower will skip some interactive and analytics operations if it finds a `CI` environmental variable set to `true`. You will find that the `CI` variable is already set for you on many continuous integration servers, e.g., [CircleCI](https://circleci.com/docs/environment-variables#basics) and [Travis-CI](http://docs.travis-ci.com/user/ci-environment/#Environment-variables).\n\nYou may try to set the `CI` variable manually before running your Bower commands. On Mac or Linux, `export CI=true` and on Windows `set CI=true`\n\n### Interactive configuration\n\nIf for some reason you are unable to set the `CI` environment variable, you can alternately use the `--config.interactive=false` flag. (`bower install --config.interactive=false`)\n\n## Defining a package\n\nYou must create a `bower.json` in your project\'s root, and specify all of its\ndependencies. This is similar to Node\'s `package.json`, or Ruby\'s `Gemfile`,\nand is useful for locking down a project\'s dependencies.\n\n*NOTE:* In versions of Bower before 0.9.0 the package metadata file was called\n`component.json` rather than `bower.json`. This has changed to avoid a name\nclash with another tool. You can still use `component.json` for now but it is\ndeprecated and the automatic fallback is likely to be removed in an upcoming\nrelease.\n\nYou can interactively create a `bower.json` with the following command:\n\n```sh\n$ bower init\n```\n\nThe `bower.json` ([spec](https://github.com/bower/bower.json-spec)) defines several options, including:\n\n* `name` (required): The name of your package.\n* `version`: A semantic version number (see [semver](http://semver.org/)).\n* `main` [string|array]: The primary endpoints of your package.\n* `ignore` [array]: An array of paths not needed in production that you want\n  Bower to ignore when installing your package.\n* `dependencies` [hash]: Packages your package depends upon in production.\n  Note that you can specify [ranges](https://github.com/isaacs/node-semver#ranges)\n  of versions for your dependencies.\n* `devDependencies` [hash]: Development dependencies.\n* `private` [boolean]: Set to true if you want to keep the package private and\n  do not want to register the package in future.\n\n```json\n{\n  "name": "my-project",\n  "description": "My project does XYZ...",\n  "version": "1.0.0",\n  "main": "path/to/main.css",\n  "ignore": [\n    ".jshintrc",\n    "**/*.txt"\n  ],\n  "dependencies": {\n    "<name>": "<version>",\n    "<name>": "<folder>",\n    "<name>": "<package>"\n  },\n  "devDependencies": {\n    "<test-framework-name>": "<version>"\n  }\n}\n```\n\n### Registering packages\n\nTo register a new package:\n\n* There **must** be a valid manifest JSON in the current working directory.\n* Your package should use [semver](http://semver.org/) Git tags.\n* Your package **must** be available at a Git endpoint (e.g., GitHub); remember\n  to push your Git tags!\n\nThen use the following command:\n\n```sh\n$ bower register <my-package-name> <git-endpoint>\n```\n\nThe Bower registry does not have authentication or user management at this point\nin time. It\'s on a first come, first served basis. Think of it like a URL\nshortener. Now anyone can run `bower install <my-package-name>`, and get your\nlibrary installed.\n\nThere is no direct way to unregister a package yet. For now, you can [request a\npackage be unregistered](https://github.com/bower/bower/issues/120).\n\n\n## Consuming a package\n\nBower also makes available a source mapping. This can be used by build tools to\neasily consume Bower packages.\n\nIf you pass the `--paths` option to Bower\'s `list` command, you will get a\nsimple name-to-path mapping:\n\n```json\n{\n  "backbone": "bower_components/backbone/index.js",\n  "jquery": "bower_components/jquery/index.js",\n  "underscore": "bower_components/underscore/index.js"\n}\n```\n\nAlternatively, every command supports the `--json` option that makes bower\noutput JSON. Command result is outputted to `stdout` and error/logs to\n`stderr`.\n\n\n## Programmatic API\n\nBower provides a powerful, programmatic API. All commands can be accessed\nthrough the `bower.commands` object.\n\n```js\nvar bower = require(\'bower\');\n\nbower.commands\n.install([\'jquery\'], { save: true }, { /* custom config */ })\n.on(\'end\', function (installed) {\n    console.log(installed);\n});\n\nbower.commands\n.search(\'jquery\', {})\n.on(\'end\', function (results) {\n    console.log(results);\n});\n```\n\nCommands emit four types of events: `log`, `prompt`, `end`, `error`.\n\n* `log` is emitted to report the state/progress of the command.\n* `prompt` is emitted whenever the user needs to be prompted.\n* `error` will only be emitted if something goes wrong.\n* `end` is emitted when the command successfully ends.\n\nFor a better of idea how this works, you may want to check out [our bin\nfile](https://github.com/bower/bower/blob/master/bin/bower).\n\nWhen using bower programmatically, prompting is disabled by default. Though you can enable it when calling commands with `interactive: true` in the config.\nThis requires you to listen for the `prompt` event and handle the prompting yourself. The easiest way is to use the [inquirer](https://npmjs.org/package/inquirer) npm module like so:\n\n```js\nvar inquirer =  require(\'inquirer\');\n\nbower.commands\n.install([\'jquery\'], { save: true }, { interactive: true })\n// ..\n.on(\'prompt\', function (prompts, callback) {\n    inquirer.prompt(prompts, callback);\n});\n```\n\n\n## Completion (experimental)\n\n_NOTE_: Completion is still not implemented for the 1.0.0 release\n\nBower now has an experimental `completion` command that is based on, and works\nsimilarly to the [npm completion](https://npmjs.org/doc/completion.html). It is\nnot available for Windows users.\n\nThis command will output a Bash / ZSH script to put into your `~/.bashrc`,\n`~/.bash_profile`, or `~/.zshrc` file.\n\n```sh\n$ bower completion >> ~/.bash_profile\n```\n\n## Analytics\n\nBower collects anonymous usage statistics in order to be able to improve bower, and to publically display package and command usage rankings. Data is tracked using Google Analytics and is made available to all bower team members.\n\nIf you\'d prefer to disable analytics in Bower altogether, then create either a local, or global `.bowerrc` file with `analytics = false`.\n\n```json\n{\n  "analytics": false\n}\n```\n\n\n\n## Support\n\n* [StackOverflow](http://stackoverflow.com/questions/tagged/bower)\n* [Mailinglist](http://groups.google.com/group/twitter-bower) - twitter-bower@googlegroups.com\n* [\\#bower](http://webchat.freenode.net/?channels=bower) on Freenode\n\n\n## Contributing\n\nWe welcome contributions of all kinds from anyone. Please take a moment to\nreview the [guidelines for contributing](CONTRIBUTING.md).\n\n* [Bug reports](CONTRIBUTING.md#bugs)\n* [Feature requests](CONTRIBUTING.md#features)\n* [Pull requests](CONTRIBUTING.md#pull-requests)\n\n\n## Bower Team\n\n### Core team\n\n* [@satazor](https://github.com/satazor)\n* [@wibblymat](https://github.com/wibblymat)\n* [@paulirish](https://github.com/paulirish)\n* [@benschwarz](https://github.com/benschwarz)\n* [@sindresorhus](https://github.com/sindresorhus)\n* [@svnlto](https://github.com/svnlto)\n* [@sheerun](https://github.com/sheerun)\n\nThanks for assistance and contributions:\n\n[@addyosmani](https://github.com/addyosmani),\n[@ahmadnassri](https://github.com/ahmadnassri),\n[@angus-c](https://github.com/angus-c),\n[@borismus](https://github.com/borismus),\n[@carsonmcdonald](https://github.com/carsonmcdonald),\n[@chriseppstein](https://github.com/chriseppstein),\n[@danwrong](https://github.com/danwrong),\n[@davidmaxwaterman](https://github.com/davidmaxwaterman),\n[@desandro](https://github.com/desandro),\n[@hemanth](https://github.com/hemanth),\n[@isaacs](https://github.com/isaacs),\n[@josh](https://github.com/josh),\n[@jrburke](https://github.com/jrburke),\n[@kennethklee](https://github.com/kennethklee),\n[@marcelombc](https://github.com/marcelombc),\n[@marcooliveira](https://github.com/marcooliveira),\n[@mklabs](https://github.com/mklabs),\n[@MrDHat](https://github.com/MrDHat),\n[@necolas](https://github.com/necolas),\n[@richo](https://github.com/richo),\n[@rvagg](https://github.com/rvagg),\n[@ryanflorence](https://github.com/ryanflorence),\n[@SlexAxton](https://github.com/SlexAxton),\n[@sstephenson](https://github.com/sstephenson),\n[@tomdale](https://github.com/tomdale),\n[@uzquiano](https://github.com/uzquiano),\n[@visionmedia](https://github.com/visionmedia),\n[@wagenet](https://github.com/wagenet),\n[@wycats](https://github.com/wycats)\n\n### Bower Alumni\n\n* [@fat](https://github.com/fat)\n* [@maccman](https://github.com/maccman)\n\n\n## License\n\nCopyright (c) 2014 Twitter and other contributors\n\nLicensed under the MIT License\n',
53 silly resolved     readmeFilename: 'README.md',
53 silly resolved     bugs: { url: 'https://github.com/bower/bower/issues' },
53 silly resolved     _id: 'bower@1.3.5',
53 silly resolved     _from: 'bower@1.3.5' } ]
54 info install bower@1.3.5 into /usr/local/lib
55 info installOne bower@1.3.5
56 info /usr/local/lib/node_modules/bower unbuild
57 info preuninstall bower@1.3.3
58 info uninstall bower@1.3.3
59 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild bower@1.3.3
60 verbose /usr/local/bin,[object Object] binRoot
61 info /usr/local/lib/node_modules/bower unbuild
62 info preuninstall bower@1.3.3
63 info uninstall bower@1.3.3
64 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild bower@1.3.3
65 verbose /usr/local/bin,[object Object] binRoot
66 error error rolling back Error: EACCES, unlink '/usr/local/bin/bower'
66 error error rolling back  bower@1.3.5 { [Error: EACCES, unlink '/usr/local/bin/bower'] errno: 3, code: 'EACCES', path: '/usr/local/bin/bower' }
67 error Error: EACCES, unlink '/usr/local/bin/bower'
67 error  { [Error: EACCES, unlink '/usr/local/bin/bower'] errno: 3, code: 'EACCES', path: '/usr/local/bin/bower' }
68 error Please try running this command again as root/Administrator.
69 error System Linux 3.13.0-29-generic
70 error command "/usr/bin/nodejs" "/usr/bin/npm" "update" "-g" "bower"
71 error cwd /home/jupazave/MiAlacena
72 error node -v v0.10.25
73 error npm -v 1.3.10
74 error path /usr/local/bin/bower
75 error code EACCES
76 error errno 3
77 error stack Error: EACCES, unlink '/usr/local/bin/bower'
78 verbose exit [ 3, true ]
